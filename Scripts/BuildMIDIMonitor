#!/bin/zsh
#
# Script to build the release version of the MIDI Monitor application.

# Display commands as they happen -- useful for debugging:
#setopt XTRACE

# build output directory -- change this to whatever you like
BUILD_OUTPUT_DIR=${HOME}/MIDIMonitorBuild

# the built copy of the app will be put here:
INSTALL_DIRECTORY=${BUILD_OUTPUT_DIR}/InstalledProducts
# the build products will be put here:
INSTALL_BUILD_DIRECTORY=${BUILD_OUTPUT_DIR}/InstallBuild
# the name of the app
APP_EXECUTABLE_NAME="MIDI Monitor"
APP_WRAPPER_NAME="${APP_EXECUTABLE_NAME}.app"

# find the source for the frameworks and the app itself
ThisScriptDir=`dirname ${PWD}/$0`
SourceRoot=${ThisScriptDir}/..
SnoizeFrameworkSource=${SourceRoot}/Frameworks
SnoizeAppSource=${SourceRoot}/Applications

#
# Process arguments
#

# Default values
DO_CLEAN=1
DO_INSTALL=1
DO_IMAGE=0

for arg in $argv ; do
	case $arg in
		( "-image" )		DO_IMAGE=1 ;;
		( "-noinstall" )	DO_INSTALL=0 ;;
		( "-noclean" )		DO_CLEAN=0 ;;
	esac
done

if [[ $DO_INSTALL -eq 1 ]] ; then
	APP_CONFIGURATION="Release"
	BUILD_ACTION=install
	EXTRA_SETTINGS=(SYMROOT="${INSTALL_BUILD_DIRECTORY}" OBJROOT="${INSTALL_BUILD_DIRECTORY}/Builds" SHARED_PRECOMPS_DIR="${INSTALL_BUILD_DIRECTORY}/Precomps")
else
	APP_CONFIGURATION ="Debug"
	BUILD_ACTION=
	EXTRA_SETTINGS=
fi

#
# Clean everything first
#

if [[ $DO_CLEAN -eq 1 ]] ; then
	cd ${SnoizeAppSource}/MIDIMonitor
	xcodebuild -configuration $APP_CONFIGURATION clean $EXTRA_SETTINGS || {echo "Build failed!"; exit 1}

fi

#
# Then build
#

if [[ $DO_INSTALL -eq 1 ]] ; then
	mkdir -p "$INSTALL_DIRECTORY" || {echo "Couldn't cd to install directory!"; exit 1}
	rm -rf "$INSTALL_DIRECTORY/$APP_WRAPPER_NAME" || {echo "Couldn't remove old installed app!"; exit 1}
fi

cd ${SnoizeAppSource}/MIDIMonitor
xcodebuild -configuration $APP_CONFIGURATION $BUILD_ACTION DSTROOT=/ SNOIZE_APP_INSTALL_PATH=$INSTALL_DIRECTORY $EXTRA_SETTINGS || {echo "Build failed!"; exit 1}

#
# Then put the app into a disk image (if -image argument is specified)
#

if [[ $DO_IMAGE -eq 1 ]]; then
	if [[ -x "$ThisScriptDir/MakeDiskImage" ]] ; then
		rm -f "${BUILD_OUTPUT_DIR}/MIDIMonitor.dmg"
		$ThisScriptDir/MakeDiskImage "$INSTALL_DIRECTORY" "MIDI Monitor" "${BUILD_OUTPUT_DIR}/MIDIMonitor.dmg" "${SnoizeAppSource}/MIDIMonitor/Read Me.html"
	else
		echo "Error: Couldn't find MakeDiskImage script."
	fi
else
	echo "Done!"
fi
