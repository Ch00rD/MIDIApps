#!/bin/zsh
#
# Script to make a disk image for an application.
#
# Arguments:
#	Application executable name (without .app extension)
#	Disk image file name
#

PUBLIC=/Users/Shared
INSTALL_DIRECTORY=$PUBLIC/$USER/InstalledProducts
APP_EXECUTABLE_NAME="$1"
APP_WRAPPER_NAME="${APP_EXECUTABLE_NAME}.app"
IMAGE_FILE_NAME="$2"
VOLUME_NAME=$APP_EXECUTABLE_NAME

# TODO This stupid Finder is broken as of 10.1.1
DO_APPLESCRIPT=0

echo "Building disk image"

SCRATCH_IMAGE="$PUBLIC/$USER/TempImage-$$.dmg"
DISKCOPY_IMAGE="$PUBLIC/$USER/$IMAGE_FILE_NAME.dmg"

# Create the image
echo "    Creating scratch image..."
rm -f $SCRATCH_IMAGE
hdiutil create $SCRATCH_IMAGE -megabytes 10 -layout NONE

# Create a /dev/disk device from the image
DRIVE=`hdid -nomount "$SCRATCH_IMAGE"`
# chop off whitespace that hdid gives us (bah!)
array=(${=DRIVE})
DRIVE=$array[1]

# Create a new filesystem on the disk device
newfs_hfs -v "$VOLUME_NAME" /dev/r${DRIVE:t}

# Remount the disk
echo "    Image formatted, ejecting $DRIVE..."
hdiutil eject $DRIVE

echo "    Mounting $SCRATCH_IMAGE..."
DRIVE=`hdid $SCRATCH_IMAGE`
# now we have the deviced path and the mount point, separated by whitespace
array=(${=DRIVE})
DRIVE=$array[1]
shift array
MOUNTPOINT="$array"

# Make the volume's root directory automatically open when mounted
if [ -x /usr/local/bin/makeDirectoryAutoOpen ]; then
   /usr/local/bin/makeDirectoryAutoOpen -folder "$MOUNTPOINT"
else
   echo "    *** Couldn't find /usr/local/bin/makeDirectoryAutoOpen, so not running it"
fi

# Copy the app into the mounted filesystem
echo "    Copying application..."
cp -R "$INSTALL_DIRECTORY/$APP_WRAPPER_NAME" "$MOUNTPOINT"

if [[ $DO_APPLESCRIPT -eq 1 ]] ; then
	# Run some AppleScript to set the window's position, icon size, etc.
	osascript <<- EndOfScript
	tell application "Finder"
		set theDisk to the disk "$VOLUME_NAME"
		set theWindow to the container window of theDisk
		set theApp to application file "$APP_WRAPPER_NAME" of theDisk	
	
		-- Set the window to icon view, with big icons
		set current view of theWindow to icon view
		set theOptions to the icon view options of theWindow
		set icon size of theOptions to 128
		set arrangement of theOptions to not arranged

		-- Set the window size/position and the icon position
		set bounds of theWindow to {100, 100, 350, 300}
		set position of theApp to {120, 80}
	end tell
	EndOfScript

else
	echo "Set up the window's view options and icon position."
	echo "(Set DO_APPLESCRIPT to 1 in MakeDiskImage to do this automatically, if they ever fix the Finder bugs.)"
	echo "Then press return to continue."
	read
fi

# Eject the disk
echo "    Ejecting..."
#hdiutil eject $DRIVE   # This doesn't give the Finder a chance to sync...
osascript -e "tell application \"Finder\" to eject disk \"$VOLUME_NAME\""

# Convert the image to a UDIF compressed image 
echo "    Compressing..."
hdiutil convert -format UDCO $SCRATCH_IMAGE -o ${DISKCOPY_IMAGE:r}

# Remove the temporary image
echo "    Removing scratch image"
rm -f $SCRATCH_IMAGE

echo "Done!"
